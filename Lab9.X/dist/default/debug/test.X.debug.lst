

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 06 01:27:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.32
    17                           ; Generated 02/02/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _LATC	set	3979
    52  0000                     _TRISC	set	3988
    53  0000                     _RCONbits	set	4048
    54  0000                     _PR2	set	4043
    55  0000                     _OSCCONbits	set	4051
    56  0000                     _T2CONbits	set	4042
    57  0000                     _CCP1CONbits	set	4029
    58  0000                     _CCPR1L	set	4030
    59  0000                     _INTCON2	set	4081
    60  0000                     _INTCON	set	4082
    61  0000                     _INTCONbits	set	4082
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  00012C                     __pcinit:
    67                           	callstack 0
    68  00012C                     start_initialization:
    69                           	callstack 0
    70  00012C                     __initialization:
    71                           	callstack 0
    72  00012C                     end_of_initialization:
    73                           	callstack 0
    74  00012C                     __end_of__initialization:
    75                           	callstack 0
    76  00012C  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    77  00012E  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    78  000130  0100               	movlb	0
    79  000132  EF76  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	callstack 0
    84  000001                     ??_Rotate:
    85  000001                     
    86                           ; 1 bytes @ 0x0
    87  000001                     	ds	2
    88  000003                     Rotate@i:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x2
    92  000003                     	ds	2
    93  000005                     Rotate@j:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0x4
    97  000005                     	ds	2
    98  000007                     Rotate@k:
    99                           	callstack 0
   100                           
   101                           ; 2 bytes @ 0x6
   102  000007                     	ds	2
   103  000009                     Rotate@i_269:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0x8
   107  000009                     	ds	2
   108  00000B                     
   109                           ; 1 bytes @ 0xA
   110 ;;
   111 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   112 ;;
   113 ;; *************** function _main *****************
   114 ;; Defined at:
   115 ;;		line 38 in file "Lab9_Advanced.c"
   116 ;; Parameters:    Size  Location     Type
   117 ;;		None
   118 ;; Auto vars:     Size  Location     Type
   119 ;;		None
   120 ;; Return value:  Size  Location     Type
   121 ;;                  1    wreg      void 
   122 ;; Registers used:
   123 ;;		wreg, status,2
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   129 ;;      Params:         0       0       0       0       0       0       0
   130 ;;      Locals:         0       0       0       0       0       0       0
   131 ;;      Temps:          0       0       0       0       0       0       0
   132 ;;      Totals:         0       0       0       0       0       0       0
   133 ;;Total ram usage:        0 bytes
   134 ;; Hardware stack levels required when called: 1
   135 ;; This function calls:
   136 ;;		Nothing
   137 ;; This function is called by:
   138 ;;		Startup code after reset
   139 ;; This function uses a non-reentrant model
   140 ;;
   141                           
   142                           	psect	text0
   143  0000EC                     __ptext0:
   144                           	callstack 0
   145  0000EC                     _main:
   146                           	callstack 30
   147  0000EC                     
   148                           ;Lab9_Advanced.c: 40: 
   149  0000EC  84CA               	bsf	202,2,c	;volatile
   150  0000EE                     
   151                           ;Lab9_Advanced.c: 41: 
   152  0000EE  50CA               	movf	202,w,c	;volatile
   153  0000F0  0BFC               	andlw	-4
   154  0000F2  0901               	iorlw	1
   155  0000F4  6ECA               	movwf	202,c	;volatile
   156                           
   157                           ;Lab9_Advanced.c: 44: 
   158  0000F6  50D3               	movf	211,w,c	;volatile
   159  0000F8  0B8F               	andlw	-113
   160  0000FA  0910               	iorlw	16
   161  0000FC  6ED3               	movwf	211,c	;volatile
   162                           
   163                           ;Lab9_Advanced.c: 46:     PR2 = 0x9b;
   164  0000FE  50BD               	movf	189,w,c	;volatile
   165  000100  0BF0               	andlw	-16
   166  000102  090C               	iorlw	12
   167  000104  6EBD               	movwf	189,c	;volatile
   168                           
   169                           ;Lab9_Advanced.c: 49:     INTCON = 0b11010000;
   170  000106  0E00               	movlw	0
   171  000108  6E94               	movwf	148,c	;volatile
   172                           
   173                           ;Lab9_Advanced.c: 50:     INTCON2 = 0b01110001;
   174  00010A  0E00               	movlw	0
   175  00010C  6E8B               	movwf	139,c	;volatile
   176  00010E  0E9B               	movlw	155
   177  000110  6ECB               	movwf	203,c	;volatile
   178  000112  8ED0               	bsf	208,7,c	;volatile
   179  000114  0ED0               	movlw	208
   180  000116  6EF2               	movwf	242,c	;volatile
   181  000118  0E71               	movlw	113
   182  00011A  6EF1               	movwf	241,c	;volatile
   183                           
   184                           ;Lab9_Advanced.c: 71:     CCPR1L = 0x04;
   185  00011C  0E04               	movlw	4
   186  00011E  6EBE               	movwf	190,c	;volatile
   187                           
   188                           ;Lab9_Advanced.c: 72:     CCP1CONbits.DC1B = 0b00;
   189  000120  0ECF               	movlw	-49
   190  000122  16BD               	andwf	189,f,c	;volatile
   191  000124                     l43:
   192  000124  EF92  F000         	goto	l43
   193  000128  EF07  F000         	goto	start
   194  00012C                     __end_of_main:
   195                           	callstack 0
   196                           
   197 ;; *************** function _Rotate *****************
   198 ;; Defined at:
   199 ;;		line 12 in file "Lab9_Advanced.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;  k               2    6[COMRAM] int 
   204 ;;  j               2    4[COMRAM] int 
   205 ;;  i               2    8[COMRAM] int 
   206 ;;  i               2    2[COMRAM] int 
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2, status,0
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   216 ;;      Params:         0       0       0       0       0       0       0
   217 ;;      Locals:         8       0       0       0       0       0       0
   218 ;;      Temps:          2       0       0       0       0       0       0
   219 ;;      Totals:        10       0       0       0       0       0       0
   220 ;;Total ram usage:       10 bytes
   221 ;; Hardware stack levels used: 1
   222 ;; This function calls:
   223 ;;		Nothing
   224 ;; This function is called by:
   225 ;;		Interrupt level 2
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	intcode
   230  000008                     __pintcode:
   231                           	callstack 0
   232  000008                     _Rotate:
   233                           	callstack 30
   234                           
   235                           ;incstack = 0
   236  000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   237  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   238                           
   239                           	psect	intcode_body
   240  000012                     __pintcode_body:
   241                           	callstack 30
   242  000012                     int_func:
   243                           	callstack 30
   244  000012  0006               	pop		; remove dummy address from shadow register refresh
   245  000014                     i2l27:
   246  000014                     
   247                           ;Lab9_Advanced.c: 17: 
   248  000014  0E04               	movlw	4
   249  000016  6EBE               	movwf	190,c	;volatile
   250                           
   251                           ;Lab9_Advanced.c: 18:         for(int i = 0; i < 1000; i++){
   252  000018  0ECF               	movlw	-49
   253  00001A  16BD               	andwf	189,f,c	;volatile
   254                           
   255                           ;Lab9_Advanced.c: 21:         }
   256  00001C  0E00               	movlw	0
   257  00001E  6E04               	movwf	(Rotate@i+1)^0,c
   258  000020  0E00               	movlw	0
   259  000022  6E03               	movwf	Rotate@i^0,c
   260  000024                     i2l728:
   261                           
   262                           ;Lab9_Advanced.c: 22:     }
   263  000024  0E00               	movlw	0
   264  000026  6E06               	movwf	(Rotate@j+1)^0,c
   265  000028  0E00               	movlw	0
   266  00002A  6E05               	movwf	Rotate@j^0,c
   267  00002C                     i2l734:
   268                           
   269                           ;Lab9_Advanced.c: 23:     INTCONbits.INT0IF = 0;
   270  00002C  0E01               	movlw	1
   271  00002E  6E01               	movwf	??_Rotate^0,c
   272  000030  38BD               	swapf	189,w,c	;volatile
   273  000032  0B03               	andlw	3
   274  000034  6E02               	movwf	(??_Rotate+1)^0,c
   275  000036  5001               	movf	??_Rotate^0,w,c
   276  000038  2602               	addwf	(??_Rotate+1)^0,f,c
   277  00003A  3A02               	swapf	(??_Rotate+1)^0,f,c
   278  00003C  50BD               	movf	189,w,c	;volatile
   279  00003E  1802               	xorwf	(??_Rotate+1)^0,w,c
   280  000040  0BCF               	andlw	-49
   281  000042  1802               	xorwf	(??_Rotate+1)^0,w,c
   282  000044  6EBD               	movwf	189,c	;volatile
   283  000046                     
   284                           ;Lab9_Advanced.c: 24: }
   285  000046  0E00               	movlw	0
   286  000048  6E08               	movwf	(Rotate@k+1)^0,c
   287  00004A  0E00               	movlw	0
   288  00004C  6E07               	movwf	Rotate@k^0,c
   289  00004E                     i2l742:
   290  00004E  4A07               	infsnz	Rotate@k^0,f,c
   291  000050  2A08               	incf	(Rotate@k+1)^0,f,c
   292  000052  BE08               	btfsc	(Rotate@k+1)^0,7,c
   293  000054  EF35  F000         	goto	i2u1_41
   294  000058  5008               	movf	(Rotate@k+1)^0,w,c
   295  00005A  E109               	bnz	i2u1_40
   296  00005C  0E32               	movlw	50
   297  00005E  5C07               	subwf	Rotate@k^0,w,c
   298  000060  A0D8               	btfss	status,0,c
   299  000062  EF35  F000         	goto	i2u1_41
   300  000066  EF37  F000         	goto	i2u1_40
   301  00006A                     i2u1_41:
   302  00006A  EF27  F000         	goto	i2l742
   303  00006E                     i2u1_40:
   304  00006E                     
   305                           ;Lab9_Advanced.c: 25: 
   306  00006E  4A05               	infsnz	Rotate@j^0,f,c
   307  000070  2A06               	incf	(Rotate@j+1)^0,f,c
   308  000072  BE06               	btfsc	(Rotate@j+1)^0,7,c
   309  000074  EF45  F000         	goto	i2u2_41
   310  000078  5006               	movf	(Rotate@j+1)^0,w,c
   311  00007A  E109               	bnz	i2u2_40
   312  00007C  0E04               	movlw	4
   313  00007E  5C05               	subwf	Rotate@j^0,w,c
   314  000080  A0D8               	btfss	status,0,c
   315  000082  EF45  F000         	goto	i2u2_41
   316  000086  EF47  F000         	goto	i2u2_40
   317  00008A                     i2u2_41:
   318  00008A  EF16  F000         	goto	i2l734
   319  00008E                     i2u2_40:
   320  00008E                     
   321                           ;Lab9_Advanced.c: 26: void main(void) {
   322  00008E  2ABE               	incf	190,f,c	;volatile
   323  000090                     
   324                           ;Lab9_Advanced.c: 27: 
   325  000090  0ECF               	movlw	-49
   326  000092  16BD               	andwf	189,f,c	;volatile
   327  000094                     
   328                           ;Lab9_Advanced.c: 28:     T2CONbits.TMR2ON = 0b1;
   329  000094  4A03               	infsnz	Rotate@i^0,f,c
   330  000096  2A04               	incf	(Rotate@i+1)^0,f,c
   331  000098  BE04               	btfsc	(Rotate@i+1)^0,7,c
   332  00009A  EF58  F000         	goto	i2u3_41
   333  00009E  5004               	movf	(Rotate@i+1)^0,w,c
   334  0000A0  E109               	bnz	i2u3_40
   335  0000A2  0E10               	movlw	16
   336  0000A4  5C03               	subwf	Rotate@i^0,w,c
   337  0000A6  A0D8               	btfss	status,0,c
   338  0000A8  EF58  F000         	goto	i2u3_41
   339  0000AC  EF5A  F000         	goto	i2u3_40
   340  0000B0                     i2u3_41:
   341  0000B0  EF12  F000         	goto	i2l728
   342  0000B4                     i2u3_40:
   343  0000B4                     
   344                           ;Lab9_Advanced.c: 30: 
   345  0000B4  0E00               	movlw	0
   346  0000B6  6E0A               	movwf	(Rotate@i_269+1)^0,c
   347  0000B8  0E00               	movlw	0
   348  0000BA  6E09               	movwf	Rotate@i_269^0,c
   349  0000BC                     i2l764:
   350                           
   351                           ;Lab9_Advanced.c: 31: 
   352  0000BC  0E04               	movlw	4
   353  0000BE  6EBE               	movwf	190,c	;volatile
   354                           
   355                           ;Lab9_Advanced.c: 32:     OSCCONbits.IRCF = 0b001;
   356  0000C0  0ECF               	movlw	-49
   357  0000C2  16BD               	andwf	189,f,c	;volatile
   358  0000C4                     
   359                           ;Lab9_Advanced.c: 33: 
   360  0000C4  4A09               	infsnz	Rotate@i_269^0,f,c
   361  0000C6  2A0A               	incf	(Rotate@i_269+1)^0,f,c
   362  0000C8  BE0A               	btfsc	(Rotate@i_269+1)^0,7,c
   363  0000CA  EF70  F000         	goto	i2u4_41
   364  0000CE  0EE8               	movlw	232
   365  0000D0  5C09               	subwf	Rotate@i_269^0,w,c
   366  0000D2  0E03               	movlw	3
   367  0000D4  580A               	subwfb	(Rotate@i_269+1)^0,w,c
   368  0000D6  A0D8               	btfss	status,0,c
   369  0000D8  EF70  F000         	goto	i2u4_41
   370  0000DC  EF72  F000         	goto	i2u4_40
   371  0000E0                     i2u4_41:
   372  0000E0  EF5E  F000         	goto	i2l764
   373  0000E4                     i2u4_40:
   374  0000E4  EF0A  F000         	goto	i2l27
   375  0000E8  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376  0000EA  0011               	retfie		f
   377  0000EC                     __end_of_Rotate:
   378                           	callstack 0
   379  0000                     
   380                           	psect	rparam
   381  0000                     
   382                           	psect	temp
   383  00000B                     btemp:
   384                           	callstack 0
   385  00000B                     	ds	1
   386  0000                     int$flags	set	btemp
   387  0000                     wtemp8	set	btemp+1
   388  0000                     ttemp5	set	btemp+1
   389  0000                     ttemp6	set	btemp+4
   390  0000                     ttemp7	set	btemp+8
   391                           
   392                           	psect	idloc
   393                           
   394                           ;Config register IDLOC0 @ 0x200000
   395                           ;	unspecified, using default values
   396  200000                     	org	2097152
   397  200000  FF                 	db	255
   398                           
   399                           ;Config register IDLOC1 @ 0x200001
   400                           ;	unspecified, using default values
   401  200001                     	org	2097153
   402  200001  FF                 	db	255
   403                           
   404                           ;Config register IDLOC2 @ 0x200002
   405                           ;	unspecified, using default values
   406  200002                     	org	2097154
   407  200002  FF                 	db	255
   408                           
   409                           ;Config register IDLOC3 @ 0x200003
   410                           ;	unspecified, using default values
   411  200003                     	org	2097155
   412  200003  FF                 	db	255
   413                           
   414                           ;Config register IDLOC4 @ 0x200004
   415                           ;	unspecified, using default values
   416  200004                     	org	2097156
   417  200004  FF                 	db	255
   418                           
   419                           ;Config register IDLOC5 @ 0x200005
   420                           ;	unspecified, using default values
   421  200005                     	org	2097157
   422  200005  FF                 	db	255
   423                           
   424                           ;Config register IDLOC6 @ 0x200006
   425                           ;	unspecified, using default values
   426  200006                     	org	2097158
   427  200006  FF                 	db	255
   428                           
   429                           ;Config register IDLOC7 @ 0x200007
   430                           ;	unspecified, using default values
   431  200007                     	org	2097159
   432  200007  FF                 	db	255
   433                           
   434                           	psect	config
   435                           
   436                           ; Padding undefined space
   437  300000                     	org	3145728
   438  300000  FF                 	db	255
   439                           
   440                           ;Config register CONFIG1H @ 0x300001
   441                           ;	Oscillator Selection bits
   442                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   443                           ;	Fail-Safe Clock Monitor Enable bit
   444                           ;	FCMEN = 0x0, unprogrammed default
   445                           ;	Internal/External Oscillator Switchover bit
   446                           ;	IESO = 0x0, unprogrammed default
   447  300001                     	org	3145729
   448  300001  08                 	db	8
   449                           
   450                           ;Config register CONFIG2L @ 0x300002
   451                           ;	Power-up Timer Enable bit
   452                           ;	PWRT = OFF, PWRT disabled
   453                           ;	Brown-out Reset Enable bits
   454                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   455                           ;	Brown Out Reset Voltage bits
   456                           ;	BORV = 0x3, unprogrammed default
   457  300002                     	org	3145730
   458  300002  1B                 	db	27
   459                           
   460                           ;Config register CONFIG2H @ 0x300003
   461                           ;	Watchdog Timer Enable bit
   462                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   463                           ;	Watchdog Timer Postscale Select bits
   464                           ;	WDTPS = 0xF, unprogrammed default
   465  300003                     	org	3145731
   466  300003  1E                 	db	30
   467                           
   468                           ; Padding undefined space
   469  300004                     	org	3145732
   470  300004  FF                 	db	255
   471                           
   472                           ;Config register CONFIG3H @ 0x300005
   473                           ;	CCP2 MUX bit
   474                           ;	CCP2MX = 0x1, unprogrammed default
   475                           ;	PORTB A/D Enable bit
   476                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   477                           ;	Low-Power Timer1 Oscillator Enable bit
   478                           ;	LPT1OSC = 0x0, unprogrammed default
   479                           ;	MCLR Pin Enable bit
   480                           ;	MCLRE = 0x1, unprogrammed default
   481  300005                     	org	3145733
   482  300005  81                 	db	129
   483                           
   484                           ;Config register CONFIG4L @ 0x300006
   485                           ;	Stack Full/Underflow Reset Enable bit
   486                           ;	STVREN = 0x1, unprogrammed default
   487                           ;	Single-Supply ICSP Enable bit
   488                           ;	LVP = OFF, Single-Supply ICSP disabled
   489                           ;	Extended Instruction Set Enable bit
   490                           ;	XINST = 0x0, unprogrammed default
   491                           ;	Background Debugger Enable bit
   492                           ;	DEBUG = 0x1, unprogrammed default
   493  300006                     	org	3145734
   494  300006  81                 	db	129
   495                           
   496                           ; Padding undefined space
   497  300007                     	org	3145735
   498  300007  FF                 	db	255
   499                           
   500                           ;Config register CONFIG5L @ 0x300008
   501                           ;	unspecified, using default values
   502                           ;	Code Protection bit
   503                           ;	CP0 = 0x1, unprogrammed default
   504                           ;	Code Protection bit
   505                           ;	CP1 = 0x1, unprogrammed default
   506                           ;	Code Protection bit
   507                           ;	CP2 = 0x1, unprogrammed default
   508                           ;	Code Protection bit
   509                           ;	CP3 = 0x1, unprogrammed default
   510  300008                     	org	3145736
   511  300008  0F                 	db	15
   512                           
   513                           ;Config register CONFIG5H @ 0x300009
   514                           ;	Boot Block Code Protection bit
   515                           ;	CPB = 0x1, unprogrammed default
   516                           ;	Data EEPROM Code Protection bit
   517                           ;	CPD = OFF, Data EEPROM not code-protected
   518  300009                     	org	3145737
   519  300009  C0                 	db	192
   520                           
   521                           ;Config register CONFIG6L @ 0x30000A
   522                           ;	unspecified, using default values
   523                           ;	Write Protection bit
   524                           ;	WRT0 = 0x1, unprogrammed default
   525                           ;	Write Protection bit
   526                           ;	WRT1 = 0x1, unprogrammed default
   527                           ;	Write Protection bit
   528                           ;	WRT2 = 0x1, unprogrammed default
   529                           ;	Write Protection bit
   530                           ;	WRT3 = 0x1, unprogrammed default
   531  30000A                     	org	3145738
   532  30000A  0F                 	db	15
   533                           
   534                           ;Config register CONFIG6H @ 0x30000B
   535                           ;	unspecified, using default values
   536                           ;	Configuration Register Write Protection bit
   537                           ;	WRTC = 0x1, unprogrammed default
   538                           ;	Boot Block Write Protection bit
   539                           ;	WRTB = 0x1, unprogrammed default
   540                           ;	Data EEPROM Write Protection bit
   541                           ;	WRTD = 0x1, unprogrammed default
   542  30000B                     	org	3145739
   543  30000B  E0                 	db	224
   544                           
   545                           ;Config register CONFIG7L @ 0x30000C
   546                           ;	unspecified, using default values
   547                           ;	Table Read Protection bit
   548                           ;	EBTR0 = 0x1, unprogrammed default
   549                           ;	Table Read Protection bit
   550                           ;	EBTR1 = 0x1, unprogrammed default
   551                           ;	Table Read Protection bit
   552                           ;	EBTR2 = 0x1, unprogrammed default
   553                           ;	Table Read Protection bit
   554                           ;	EBTR3 = 0x1, unprogrammed default
   555  30000C                     	org	3145740
   556  30000C  0F                 	db	15
   557                           
   558                           ;Config register CONFIG7H @ 0x30000D
   559                           ;	unspecified, using default values
   560                           ;	Boot Block Table Read Protection bit
   561                           ;	EBTRB = 0x1, unprogrammed default
   562  30000D                     	org	3145741
   563  30000D  40                 	db	64
   564                           tosu	equ	0xFFF
   565                           tosh	equ	0xFFE
   566                           tosl	equ	0xFFD
   567                           stkptr	equ	0xFFC
   568                           pclatu	equ	0xFFB
   569                           pclath	equ	0xFFA
   570                           pcl	equ	0xFF9
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           prodh	equ	0xFF4
   576                           prodl	equ	0xFF3
   577                           indf0	equ	0xFEF
   578                           postinc0	equ	0xFEE
   579                           postdec0	equ	0xFED
   580                           preinc0	equ	0xFEC
   581                           plusw0	equ	0xFEB
   582                           fsr0h	equ	0xFEA
   583                           fsr0l	equ	0xFE9
   584                           wreg	equ	0xFE8
   585                           indf1	equ	0xFE7
   586                           postinc1	equ	0xFE6
   587                           postdec1	equ	0xFE5
   588                           preinc1	equ	0xFE4
   589                           plusw1	equ	0xFE3
   590                           fsr1h	equ	0xFE2
   591                           fsr1l	equ	0xFE1
   592                           bsr	equ	0xFE0
   593                           indf2	equ	0xFDF
   594                           postinc2	equ	0xFDE
   595                           postdec2	equ	0xFDD
   596                           preinc2	equ	0xFDC
   597                           plusw2	equ	0xFDB
   598                           fsr2h	equ	0xFDA
   599                           fsr2l	equ	0xFD9
   600                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     10      10
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Rotate in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Rotate in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rotate in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rotate in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rotate in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rotate in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rotate in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _Rotate                                              10    10      0     120
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _Rotate (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      A       A       1        7.9%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               F4      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            F4      0       0      15        0.0%
BIGRAM             5F3      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 06 01:27:12 2021

                     l43 0124                       l44 0124                      l770 00EC  
                    l772 00EE                      l774 0112                      _PR2 000FCB  
                   _LATC 000F8B                     i2l27 0014                     _main 00EC  
                   btemp 000B                     start 000E             ___param_bank 000000  
                  ?_main 0001                    i2l722 0014                    i2l750 008E  
                  i2l742 004E                    i2l734 002C                    i2l752 0090  
                  i2l744 0052                    i2l736 0046                    i2l728 0024  
                  i2l754 0094                    i2l746 006E                    i2l764 00BC  
                  i2l756 0098                    i2l748 0072                    i2l766 00C4  
                  i2l758 00B4                    i2l768 00C8                    _TRISC 000F94  
                  ttemp5 000C                    ttemp6 000F                    ttemp7 0013  
                  status 000FD8                    wtemp8 000C          __initialization 012C  
           __end_of_main 012C                   ??_main 000B            __activetblptr 000000  
                 _CCPR1L 000FBE                   _INTCON 000FF2                   i2u1_40 006E  
                 i2u1_41 006A                   i2u2_40 008E                   i2u2_41 008A  
                 i2u3_40 00B4                   i2u3_41 00B0                   i2u4_40 00E4  
                 i2u4_41 00E0                   _Rotate 0008                   isa$std 000001  
             __accesstop 0080  __end_of__initialization 012C            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ?_Rotate 0001                  _INTCON2 000FF1  
                __Hparam 0000                  __Lparam 0000          __size_of_Rotate 00E4  
                Rotate@i 0003                  Rotate@j 0005                  Rotate@k 0007  
                __pcinit 012C                  __ramtop 0600                  __ptext0 00EC  
              _T2CONbits 000FCA           __pintcode_body 0012     end_of_initialization 012C  
                int_func 0012              Rotate@i_269 0009              _CCP1CONbits 000FBD  
         __end_of_Rotate 00EC      start_initialization 012C                 ??_Rotate 0001  
              __pintcode 0008                 _RCONbits 000FD0                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0040                 isa$xinst 000000  
               int$flags 000B               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3  
